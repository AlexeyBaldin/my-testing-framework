package org.mytestingframework;

import org.mytestingframework.constant.About;

import java.util.*;

import static org.mytestingframework.constant.Color.*;

class MyTestPrinter {

    private MyTestPrinter() {}

    static void hello() {
        System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("╔╗──╔╗╔╗╔╗────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║║──║║║║║║────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║╚╗╔╝║║╚╝║────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║╔╗╔╗║╚═╗║────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║║╚╝║║─╔╝║────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("╚╝──╚╝─╚═╝────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("╔════╗╔═══╗╔══╗╔════╗╔══╗╔╗─╔╗╔═══╗───────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("╚═╗╔═╝║╔══╝║╔═╝╚═╗╔═╝╚╗╔╝║╚═╝║║╔══╝───────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("──║║──║╚══╗║╚═╗──║║───║║─║╔╗─║║║╔═╗───────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("──║║──║╔══╝╚═╗║──║║───║║─║║╚╗║║║╚╗║───────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("──║║──║╚══╗╔═╝║──║║──╔╝╚╗║║─║║║╚═╝║───────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("──╚╝──╚═══╝╚══╝──╚╝──╚══╝╚╝─╚╝╚═══╝───────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("╔══╗╔═══╗╔══╗╔╗──╔╗╔═══╗╔╗╔╗╔╗╔══╗╔═══╗╔╗╔══╗─────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║╔═╝║╔═╗║║╔╗║║║──║║║╔══╝║║║║║║║╔╗║║╔═╗║║║║╔═╝─────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║╚═╗║╚═╝║║╚╝║║╚╗╔╝║║╚══╗║║║║║║║║║║║╚═╝║║╚╝║───────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║╔═╝║╔╗╔╝║╔╗║║╔╗╔╗║║╔══╝║║║║║║║║║║║╔╗╔╝║╔╗║───────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("║║──║║║║─║║║║║║╚╝║║║╚══╗║╚╝╚╝║║╚╝║║║║║─║║║╚═╗────────────────────────────────────────────────────────────────────────────────────────────────" + About.VERSION + "───");
        System.out.println("╚╝──╚╝╚╝─╚╝╚╝╚╝──╚╝╚═══╝╚═╝╚═╝╚══╝╚╝╚╝─╚╝╚══╝────────────────────────────────────────────────────────────────────────────────────────" + About.AUTHOR_NAME + About.AUTHOR_SNAME + "───");
        System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");


        System.out.println("───Start testing.─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("───Start internal output...───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
    }

    static void goodbye() {
        System.out.println("───Finish testing.────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
    }

    static void printTestResults(HashSet<MyTestInformation> testResults) {
        System.out.println("───End internal output.───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("───Results:───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println(formTestResultsString(testResults));
    }

    private static StringBuilder formTestResultsString(HashSet<MyTestInformation> testResults) {
        StringBuilder stringBuilder = new StringBuilder();

        ArrayList<String> testNames = new ArrayList<>();
        testResults.forEach(testResult -> testNames.add(testResult.getTestingMethod().getName()));

        int maxClassNameLength = Collections.max(MyTester.getClassesNames(), Comparator.comparing(String::length)).length();
        int maxTestNameLength = Collections.max(testNames, Comparator.comparing(String::length)).length();

        stringBuilder.append('\n');
        testResults.forEach(testResult -> {
            stringBuilder.append("───[" + ANSI_CYAN).append(String.format("%-" + maxClassNameLength+ "s", testResult.getTestingClass().getName()))
                    .append(ANSI_RESET).append(" : ")
                    .append(ANSI_BLUE).append(String.format("%-" + maxTestNameLength+ "s", testResult.getTestingMethod().getName()))
                    .append(ANSI_RESET).append("]");

            if (testResult.getResult()) {
                stringBuilder.append(ANSI_GREEN + "      Test Success  :)   " + ANSI_YELLOW).append(String.format("%10s", testResult.getTimeInSeconds())).append(" sec.").append(ANSI_RESET).append('\n');
            } else {
                stringBuilder.append(ANSI_RED + "        Test Error  :(   " + ANSI_YELLOW).append(String.format("%10s", testResult.getTimeInSeconds())).append(" sec.").append(ANSI_RESET).append('\n');
            }
        });

        return stringBuilder;
    }
}
